Useless nonterminals

   declarations
   testnumber
   identifier
   comment


Terminals which are not used

   VAR
   WHILE
   DO
   DONE
   IF
   THEN
   ELSE
   ENDIF
   PRINT
   READ
   FLOAT
   STRING
   INT
   tSTRING_LITERAL
   EQUAL
   tASSIGN
   COMMENT
   ENDL
   COLON


Useless rules

   11 declarations: declarations VAR tIDEN COLON FLOAT ENDL
   12             | declarations VAR tIDEN COLON INT ENDL
   13             | declarations VAR tIDEN COLON STRING ENDL
   14             | VAR tIDEN COLON FLOAT ENDL
   15             | VAR tIDEN COLON INT ENDL
   16             | VAR tIDEN COLON STRING ENDL

   17 testnumber: tFLOAT input
   18           | tINT input
   19           | tFLOAT
   20           | tINT

   21 identifier: tIDEN

   22 comment: COMMENT


State 16 conflicts: 6 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: numberExp input
    2      | numberExp

    3 numberExp: numberExp '-' numberExp
    4          | numberExp '+' numberExp
    5          | numberExp '*' numberExp
    6          | numberExp '/' numberExp
    7          | '-' numberExp
    8          | tINT
    9          | tFLOAT
   10          | tIDEN


Terminals, with rules where they appear

$end (0) 0
'*' (42) 5
'+' (43) 4
'-' (45) 3 7
'/' (47) 6
error (256)
VAR (258)
WHILE (259)
DO (260)
DONE (261)
IF (262)
THEN (263)
ELSE (264)
ENDIF (265)
PRINT (266)
READ (267)
FLOAT (268)
STRING (269)
INT (270)
tIDEN (271) 10
tFLOAT (272) 9
tINT (273) 8
tSTRING_LITERAL (274)
UMINUS (275)
EQUAL (276)
tASSIGN (277)
COMMENT (278)
ENDL (279)
COLON (280)


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
input (31)
    on left: 1 2, on right: 0 1
numberExp (32)
    on left: 3 4 5 6 7 8 9 10, on right: 1 2 3 4 5 6 7


state 0

    0 $accept: . input $end

    tIDEN   shift, and go to state 1
    tFLOAT  shift, and go to state 2
    tINT    shift, and go to state 3
    '-'     shift, and go to state 4

    input      go to state 5
    numberExp  go to state 6


state 1

   10 numberExp: tIDEN .

    $default  reduce using rule 10 (numberExp)


state 2

    9 numberExp: tFLOAT .

    $default  reduce using rule 9 (numberExp)


state 3

    8 numberExp: tINT .

    $default  reduce using rule 8 (numberExp)


state 4

    7 numberExp: '-' . numberExp

    tIDEN   shift, and go to state 1
    tFLOAT  shift, and go to state 2
    tINT    shift, and go to state 3
    '-'     shift, and go to state 4

    numberExp  go to state 7


state 5

    0 $accept: input . $end

    $end  shift, and go to state 8


state 6

    1 input: numberExp . input
    2      | numberExp .
    3 numberExp: numberExp . '-' numberExp
    4          | numberExp . '+' numberExp
    5          | numberExp . '*' numberExp
    6          | numberExp . '/' numberExp

    tIDEN   shift, and go to state 1
    tFLOAT  shift, and go to state 2
    tINT    shift, and go to state 3
    '+'     shift, and go to state 9
    '-'     shift, and go to state 10
    '*'     shift, and go to state 11
    '/'     shift, and go to state 12

    $default  reduce using rule 2 (input)

    input      go to state 13
    numberExp  go to state 6


state 7

    3 numberExp: numberExp . '-' numberExp
    4          | numberExp . '+' numberExp
    5          | numberExp . '*' numberExp
    6          | numberExp . '/' numberExp
    7          | '-' numberExp .

    $default  reduce using rule 7 (numberExp)


state 8

    0 $accept: input $end .

    $default  accept


state 9

    4 numberExp: numberExp '+' . numberExp

    tIDEN   shift, and go to state 1
    tFLOAT  shift, and go to state 2
    tINT    shift, and go to state 3
    '-'     shift, and go to state 4

    numberExp  go to state 15


state 10

    3 numberExp: numberExp '-' . numberExp
    7          | '-' . numberExp

    tIDEN   shift, and go to state 1
    tFLOAT  shift, and go to state 2
    tINT    shift, and go to state 3
    '-'     shift, and go to state 4

    numberExp  go to state 16


state 11

    5 numberExp: numberExp '*' . numberExp

    tIDEN   shift, and go to state 1
    tFLOAT  shift, and go to state 2
    tINT    shift, and go to state 3
    '-'     shift, and go to state 4

    numberExp  go to state 17


state 12

    6 numberExp: numberExp '/' . numberExp

    tIDEN   shift, and go to state 1
    tFLOAT  shift, and go to state 2
    tINT    shift, and go to state 3
    '-'     shift, and go to state 4

    numberExp  go to state 18


state 13

    1 input: numberExp input .

    $default  reduce using rule 1 (input)


state 14

    3 numberExp: numberExp '-' . numberExp

    tIDEN   shift, and go to state 1
    tFLOAT  shift, and go to state 2
    tINT    shift, and go to state 3
    '-'     shift, and go to state 4

    numberExp  go to state 19


state 15

    3 numberExp: numberExp . '-' numberExp
    4          | numberExp . '+' numberExp
    4          | numberExp '+' numberExp .
    5          | numberExp . '*' numberExp
    6          | numberExp . '/' numberExp

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 4 (numberExp)


state 16

    3 numberExp: numberExp . '-' numberExp
    3          | numberExp '-' numberExp .
    4          | numberExp . '+' numberExp
    5          | numberExp . '*' numberExp
    6          | numberExp . '/' numberExp
    7          | '-' numberExp .

    $end      reduce using rule 3 (numberExp)
    $end      [reduce using rule 7 (numberExp)]
    tIDEN     reduce using rule 3 (numberExp)
    tIDEN     [reduce using rule 7 (numberExp)]
    tFLOAT    reduce using rule 3 (numberExp)
    tFLOAT    [reduce using rule 7 (numberExp)]
    tINT      reduce using rule 3 (numberExp)
    tINT      [reduce using rule 7 (numberExp)]
    '+'       reduce using rule 3 (numberExp)
    '+'       [reduce using rule 7 (numberExp)]
    '-'       reduce using rule 3 (numberExp)
    '-'       [reduce using rule 7 (numberExp)]
    '*'       reduce using rule 7 (numberExp)
    '/'       reduce using rule 7 (numberExp)
    $default  reduce using rule 3 (numberExp)


state 17

    3 numberExp: numberExp . '-' numberExp
    4          | numberExp . '+' numberExp
    5          | numberExp . '*' numberExp
    5          | numberExp '*' numberExp .
    6          | numberExp . '/' numberExp

    $default  reduce using rule 5 (numberExp)


state 18

    3 numberExp: numberExp . '-' numberExp
    4          | numberExp . '+' numberExp
    5          | numberExp . '*' numberExp
    6          | numberExp . '/' numberExp
    6          | numberExp '/' numberExp .

    $default  reduce using rule 6 (numberExp)


state 19

    3 numberExp: numberExp . '-' numberExp
    3          | numberExp '-' numberExp .
    4          | numberExp . '+' numberExp
    5          | numberExp . '*' numberExp
    6          | numberExp . '/' numberExp

    '*'  shift, and go to state 11
    '/'  shift, and go to state 12

    $default  reduce using rule 3 (numberExp)
