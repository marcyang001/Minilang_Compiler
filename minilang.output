Useless nonterminals

   declarations
   testnumber
   comment


Terminals which are not used

   VAR
   IF
   THEN
   ELSE
   ENDIF
   FLOAT
   STRING
   INT
   COMMENT
   COLON


Useless rules

   36 declarations: declarations VAR tIDEN COLON FLOAT ENDL
   37             | declarations VAR tIDEN COLON INT ENDL
   38             | declarations VAR tIDEN COLON STRING ENDL
   39             | VAR tIDEN COLON FLOAT ENDL
   40             | VAR tIDEN COLON INT ENDL
   41             | VAR tIDEN COLON STRING ENDL

   42 testnumber: tFLOAT input
   43           | tINT input
   44           | tFLOAT
   45           | tINT

   46 comment: COMMENT


Rules never reduced

   26 assignOp: tIDEN tASSIGN tIDEN


State 1 conflicts: 1 reduce/reduce
State 2 conflicts: 1 shift/reduce
State 6 conflicts: 3 shift/reduce, 1 reduce/reduce
State 27 conflicts: 3 shift/reduce, 1 reduce/reduce
State 48 conflicts: 2 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: whileLoop

    2 simpleAndIfStmts: simpleStmts

    3 simpleStmts: PRINT expOp ENDL
    4            | PRINT booleanOp ENDL
    5            | PRINT tSTRING_LITERAL ENDL
    6            | PRINT ENDL
    7            | READ tIDEN ENDL
    8            | assignOp ENDL

    9 whileLoop: WHILE assignOp DO whileLoop DONE
   10          | WHILE booleanOp DO whileLoop DONE
   11          | WHILE tINT DO whileLoop DONE
   12          | simpleAndIfStmts whileLoop
   13          | whileLoop simpleAndIfStmts
   14          | simpleAndIfStmts

   15 expOp: expOp '-' expOp
   16      | expOp '+' expOp
   17      | expOp '*' expOp
   18      | expOp '/' expOp
   19      | '(' expOp ')'
   20      | '-' expOp
   21      | tINT
   22      | tFLOAT
   23      | tIDEN

   24 assignOp: /* empty */
   25         | tIDEN tASSIGN expOp
   26         | tIDEN tASSIGN tIDEN
   27         | tIDEN tASSIGN booleanOp
   28         | tIDEN tASSIGN tSTRING_LITERAL
   29         | tIDEN

   30 booleanOp: /* empty */
   31          | expOp '<' expOp
   32          | expOp '>' expOp
   33          | expOp LEQUAL expOp
   34          | expOp GEQUAL expOp
   35          | expOp EQUAL expOp


Terminals, with rules where they appear

$end (0) 0
'(' (40) 19
')' (41) 19
'*' (42) 17
'+' (43) 16
'-' (45) 15 20
'/' (47) 18
'<' (60) 31
'>' (62) 32
error (256)
VAR (258)
WHILE (259) 9 10 11
DO (260) 9 10 11
DONE (261) 9 10 11
IF (262)
THEN (263)
ELSE (264)
ENDIF (265)
PRINT (266) 3 4 5 6
READ (267) 7
FLOAT (268)
STRING (269)
INT (270)
tIDEN (271) 7 23 25 26 27 28 29
tFLOAT (272) 22
tINT (273) 11 21
tSTRING_LITERAL (274) 5 28
NEG (275)
LEQUAL (276) 33
GEQUAL (277) 34
EQUAL (278) 35
tASSIGN (279) 25 26 27 28
COMMENT (280)
ENDL (281) 3 4 5 6 7 8
COLON (282)


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
input (37)
    on left: 1, on right: 0
simpleAndIfStmts (38)
    on left: 2, on right: 12 13 14
simpleStmts (39)
    on left: 3 4 5 6 7 8, on right: 2
whileLoop (40)
    on left: 9 10 11 12 13 14, on right: 1 9 10 11 12 13
expOp (41)
    on left: 15 16 17 18 19 20 21 22 23, on right: 3 15 16 17 18 19
    20 25 31 32 33 34 35
assignOp (42)
    on left: 24 25 26 27 28 29, on right: 8 9
booleanOp (43)
    on left: 30 31 32 33 34 35, on right: 4 10 27


state 0

    0 $accept: . input $end

    WHILE  shift, and go to state 1
    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    $default  reduce using rule 24 (assignOp)

    input             go to state 5
    simpleAndIfStmts  go to state 6
    simpleStmts       go to state 7
    whileLoop         go to state 8
    assignOp          go to state 9


state 1

    9 whileLoop: WHILE . assignOp DO whileLoop DONE
   10          | WHILE . booleanOp DO whileLoop DONE
   11          | WHILE . tINT DO whileLoop DONE

    tIDEN   shift, and go to state 10
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 12
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    DO        reduce using rule 24 (assignOp)
    DO        [reduce using rule 30 (booleanOp)]
    $default  reduce using rule 24 (assignOp)

    expOp      go to state 15
    assignOp   go to state 16
    booleanOp  go to state 17


state 2

    3 simpleStmts: PRINT . expOp ENDL
    4            | PRINT . booleanOp ENDL
    5            | PRINT . tSTRING_LITERAL ENDL
    6            | PRINT . ENDL

    tIDEN            shift, and go to state 18
    tFLOAT           shift, and go to state 11
    tINT             shift, and go to state 19
    tSTRING_LITERAL  shift, and go to state 20
    '-'              shift, and go to state 13
    '('              shift, and go to state 14
    ENDL             shift, and go to state 21

    ENDL  [reduce using rule 30 (booleanOp)]

    expOp      go to state 22
    booleanOp  go to state 23


state 3

    7 simpleStmts: READ . tIDEN ENDL

    tIDEN  shift, and go to state 24


state 4

   25 assignOp: tIDEN . tASSIGN expOp
   26         | tIDEN . tASSIGN tIDEN
   27         | tIDEN . tASSIGN booleanOp
   28         | tIDEN . tASSIGN tSTRING_LITERAL
   29         | tIDEN .

    tASSIGN  shift, and go to state 25

    $default  reduce using rule 29 (assignOp)


state 5

    0 $accept: input . $end

    $end  shift, and go to state 26


state 6

   12 whileLoop: simpleAndIfStmts . whileLoop
   14          | simpleAndIfStmts .

    WHILE  shift, and go to state 1
    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    PRINT     [reduce using rule 14 (whileLoop)]
    READ      [reduce using rule 14 (whileLoop)]
    tIDEN     [reduce using rule 14 (whileLoop)]
    ENDL      reduce using rule 14 (whileLoop)
    ENDL      [reduce using rule 24 (assignOp)]
    $default  reduce using rule 14 (whileLoop)

    simpleAndIfStmts  go to state 6
    simpleStmts       go to state 7
    whileLoop         go to state 27
    assignOp          go to state 9


state 7

    2 simpleAndIfStmts: simpleStmts .

    $default  reduce using rule 2 (simpleAndIfStmts)


state 8

    1 input: whileLoop .
   13 whileLoop: whileLoop . simpleAndIfStmts

    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    ENDL      reduce using rule 24 (assignOp)
    $default  reduce using rule 1 (input)

    simpleAndIfStmts  go to state 28
    simpleStmts       go to state 7
    assignOp          go to state 9


state 9

    8 simpleStmts: assignOp . ENDL

    ENDL  shift, and go to state 29


state 10

   23 expOp: tIDEN .
   25 assignOp: tIDEN . tASSIGN expOp
   26         | tIDEN . tASSIGN tIDEN
   27         | tIDEN . tASSIGN booleanOp
   28         | tIDEN . tASSIGN tSTRING_LITERAL
   29         | tIDEN .

    tASSIGN  shift, and go to state 25

    DO        reduce using rule 29 (assignOp)
    $default  reduce using rule 23 (expOp)


state 11

   22 expOp: tFLOAT .

    $default  reduce using rule 22 (expOp)


state 12

   11 whileLoop: WHILE tINT . DO whileLoop DONE
   21 expOp: tINT .

    DO  shift, and go to state 30

    $default  reduce using rule 21 (expOp)


state 13

   20 expOp: '-' . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 31


state 14

   19 expOp: '(' . expOp ')'

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 32


state 15

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   31 booleanOp: expOp . '<' expOp
   32          | expOp . '>' expOp
   33          | expOp . LEQUAL expOp
   34          | expOp . GEQUAL expOp
   35          | expOp . EQUAL expOp

    '+'     shift, and go to state 33
    '-'     shift, and go to state 34
    '*'     shift, and go to state 35
    '/'     shift, and go to state 36
    '<'     shift, and go to state 37
    '>'     shift, and go to state 38
    LEQUAL  shift, and go to state 39
    GEQUAL  shift, and go to state 40
    EQUAL   shift, and go to state 41


state 16

    9 whileLoop: WHILE assignOp . DO whileLoop DONE

    DO  shift, and go to state 42


state 17

   10 whileLoop: WHILE booleanOp . DO whileLoop DONE

    DO  shift, and go to state 43


state 18

   23 expOp: tIDEN .

    $default  reduce using rule 23 (expOp)


state 19

   21 expOp: tINT .

    $default  reduce using rule 21 (expOp)


state 20

    5 simpleStmts: PRINT tSTRING_LITERAL . ENDL

    ENDL  shift, and go to state 44


state 21

    6 simpleStmts: PRINT ENDL .

    $default  reduce using rule 6 (simpleStmts)


state 22

    3 simpleStmts: PRINT expOp . ENDL
   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   31 booleanOp: expOp . '<' expOp
   32          | expOp . '>' expOp
   33          | expOp . LEQUAL expOp
   34          | expOp . GEQUAL expOp
   35          | expOp . EQUAL expOp

    '+'     shift, and go to state 33
    '-'     shift, and go to state 34
    '*'     shift, and go to state 35
    '/'     shift, and go to state 36
    '<'     shift, and go to state 37
    '>'     shift, and go to state 38
    LEQUAL  shift, and go to state 39
    GEQUAL  shift, and go to state 40
    EQUAL   shift, and go to state 41
    ENDL    shift, and go to state 45


state 23

    4 simpleStmts: PRINT booleanOp . ENDL

    ENDL  shift, and go to state 46


state 24

    7 simpleStmts: READ tIDEN . ENDL

    ENDL  shift, and go to state 47


state 25

   25 assignOp: tIDEN tASSIGN . expOp
   26         | tIDEN tASSIGN . tIDEN
   27         | tIDEN tASSIGN . booleanOp
   28         | tIDEN tASSIGN . tSTRING_LITERAL

    tIDEN            shift, and go to state 48
    tFLOAT           shift, and go to state 11
    tINT             shift, and go to state 19
    tSTRING_LITERAL  shift, and go to state 49
    '-'              shift, and go to state 13
    '('              shift, and go to state 14

    $default  reduce using rule 30 (booleanOp)

    expOp      go to state 50
    booleanOp  go to state 51


state 26

    0 $accept: input $end .

    $default  accept


state 27

   12 whileLoop: simpleAndIfStmts whileLoop .
   13          | whileLoop . simpleAndIfStmts

    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    PRINT     [reduce using rule 12 (whileLoop)]
    READ      [reduce using rule 12 (whileLoop)]
    tIDEN     [reduce using rule 12 (whileLoop)]
    ENDL      reduce using rule 12 (whileLoop)
    ENDL      [reduce using rule 24 (assignOp)]
    $default  reduce using rule 12 (whileLoop)

    simpleAndIfStmts  go to state 28
    simpleStmts       go to state 7
    assignOp          go to state 9


state 28

   13 whileLoop: whileLoop simpleAndIfStmts .

    $default  reduce using rule 13 (whileLoop)


state 29

    8 simpleStmts: assignOp ENDL .

    $default  reduce using rule 8 (simpleStmts)


state 30

   11 whileLoop: WHILE tINT DO . whileLoop DONE

    WHILE  shift, and go to state 1
    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    $default  reduce using rule 24 (assignOp)

    simpleAndIfStmts  go to state 6
    simpleStmts       go to state 7
    whileLoop         go to state 52
    assignOp          go to state 9


state 31

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   20      | '-' expOp .

    $default  reduce using rule 20 (expOp)


state 32

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   19      | '(' expOp . ')'

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36
    ')'  shift, and go to state 53


state 33

   16 expOp: expOp '+' . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 54


state 34

   15 expOp: expOp '-' . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 55


state 35

   17 expOp: expOp '*' . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 56


state 36

   18 expOp: expOp '/' . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 57


state 37

   31 booleanOp: expOp '<' . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 58


state 38

   32 booleanOp: expOp '>' . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 59


state 39

   33 booleanOp: expOp LEQUAL . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 60


state 40

   34 booleanOp: expOp GEQUAL . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 61


state 41

   35 booleanOp: expOp EQUAL . expOp

    tIDEN   shift, and go to state 18
    tFLOAT  shift, and go to state 11
    tINT    shift, and go to state 19
    '-'     shift, and go to state 13
    '('     shift, and go to state 14

    expOp  go to state 62


state 42

    9 whileLoop: WHILE assignOp DO . whileLoop DONE

    WHILE  shift, and go to state 1
    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    $default  reduce using rule 24 (assignOp)

    simpleAndIfStmts  go to state 6
    simpleStmts       go to state 7
    whileLoop         go to state 63
    assignOp          go to state 9


state 43

   10 whileLoop: WHILE booleanOp DO . whileLoop DONE

    WHILE  shift, and go to state 1
    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    $default  reduce using rule 24 (assignOp)

    simpleAndIfStmts  go to state 6
    simpleStmts       go to state 7
    whileLoop         go to state 64
    assignOp          go to state 9


state 44

    5 simpleStmts: PRINT tSTRING_LITERAL ENDL .

    $default  reduce using rule 5 (simpleStmts)


state 45

    3 simpleStmts: PRINT expOp ENDL .

    $default  reduce using rule 3 (simpleStmts)


state 46

    4 simpleStmts: PRINT booleanOp ENDL .

    $default  reduce using rule 4 (simpleStmts)


state 47

    7 simpleStmts: READ tIDEN ENDL .

    $default  reduce using rule 7 (simpleStmts)


state 48

   23 expOp: tIDEN .
   26 assignOp: tIDEN tASSIGN tIDEN .

    DO        reduce using rule 23 (expOp)
    DO        [reduce using rule 26 (assignOp)]
    ENDL      reduce using rule 23 (expOp)
    ENDL      [reduce using rule 26 (assignOp)]
    $default  reduce using rule 23 (expOp)


state 49

   28 assignOp: tIDEN tASSIGN tSTRING_LITERAL .

    $default  reduce using rule 28 (assignOp)


state 50

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   25 assignOp: tIDEN tASSIGN expOp .
   31 booleanOp: expOp . '<' expOp
   32          | expOp . '>' expOp
   33          | expOp . LEQUAL expOp
   34          | expOp . GEQUAL expOp
   35          | expOp . EQUAL expOp

    '+'     shift, and go to state 33
    '-'     shift, and go to state 34
    '*'     shift, and go to state 35
    '/'     shift, and go to state 36
    '<'     shift, and go to state 37
    '>'     shift, and go to state 38
    LEQUAL  shift, and go to state 39
    GEQUAL  shift, and go to state 40
    EQUAL   shift, and go to state 41

    $default  reduce using rule 25 (assignOp)


state 51

   27 assignOp: tIDEN tASSIGN booleanOp .

    $default  reduce using rule 27 (assignOp)


state 52

   11 whileLoop: WHILE tINT DO whileLoop . DONE
   13          | whileLoop . simpleAndIfStmts

    DONE   shift, and go to state 65
    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    $default  reduce using rule 24 (assignOp)

    simpleAndIfStmts  go to state 28
    simpleStmts       go to state 7
    assignOp          go to state 9


state 53

   19 expOp: '(' expOp ')' .

    $default  reduce using rule 19 (expOp)


state 54

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   16      | expOp '+' expOp .
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 16 (expOp)


state 55

   15 expOp: expOp . '-' expOp
   15      | expOp '-' expOp .
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp

    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 15 (expOp)


state 56

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   17      | expOp '*' expOp .
   18      | expOp . '/' expOp

    $default  reduce using rule 17 (expOp)


state 57

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   18      | expOp '/' expOp .

    $default  reduce using rule 18 (expOp)


state 58

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   31 booleanOp: expOp '<' expOp .

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 31 (booleanOp)


state 59

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   32 booleanOp: expOp '>' expOp .

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 32 (booleanOp)


state 60

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   33 booleanOp: expOp LEQUAL expOp .

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 33 (booleanOp)


state 61

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   34 booleanOp: expOp GEQUAL expOp .

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 34 (booleanOp)


state 62

   15 expOp: expOp . '-' expOp
   16      | expOp . '+' expOp
   17      | expOp . '*' expOp
   18      | expOp . '/' expOp
   35 booleanOp: expOp EQUAL expOp .

    '+'  shift, and go to state 33
    '-'  shift, and go to state 34
    '*'  shift, and go to state 35
    '/'  shift, and go to state 36

    $default  reduce using rule 35 (booleanOp)


state 63

    9 whileLoop: WHILE assignOp DO whileLoop . DONE
   13          | whileLoop . simpleAndIfStmts

    DONE   shift, and go to state 66
    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    $default  reduce using rule 24 (assignOp)

    simpleAndIfStmts  go to state 28
    simpleStmts       go to state 7
    assignOp          go to state 9


state 64

   10 whileLoop: WHILE booleanOp DO whileLoop . DONE
   13          | whileLoop . simpleAndIfStmts

    DONE   shift, and go to state 67
    PRINT  shift, and go to state 2
    READ   shift, and go to state 3
    tIDEN  shift, and go to state 4

    $default  reduce using rule 24 (assignOp)

    simpleAndIfStmts  go to state 28
    simpleStmts       go to state 7
    assignOp          go to state 9


state 65

   11 whileLoop: WHILE tINT DO whileLoop DONE .

    $default  reduce using rule 11 (whileLoop)


state 66

    9 whileLoop: WHILE assignOp DO whileLoop DONE .

    $default  reduce using rule 9 (whileLoop)


state 67

   10 whileLoop: WHILE booleanOp DO whileLoop DONE .

    $default  reduce using rule 10 (whileLoop)
