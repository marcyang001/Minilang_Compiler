Rules never reduced

   12 declarations: comment

   43 assignOp: tIDEN tASSIGN tIDEN


State 9 conflicts: 7 shift/reduce, 1 reduce/reduce
State 11 conflicts: 6 shift/reduce, 1 reduce/reduce
State 13 conflicts: 9 reduce/reduce
State 29 conflicts: 6 shift/reduce, 1 reduce/reduce
State 30 conflicts: 9 reduce/reduce
State 32 conflicts: 6 shift/reduce, 1 reduce/reduce
State 33 conflicts: 9 reduce/reduce
State 51 conflicts: 1 reduce/reduce
State 54 conflicts: 6 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: input $end

    1 input: input declarations ifwhilecombo
    2      | input ifwhilecombo
    3      | input comment
    4      | declarations ifwhilecombo
    5      | declarations
    6      | ifwhilecombo
    7      | comment

    8 declarations: declarations VAR tIDEN COLON FLOAT ENDL
    9             | declarations VAR tIDEN COLON INT ENDL
   10             | declarations VAR tIDEN COLON STRING ENDL
   11             | declarations comment
   12             | comment
   13             | VAR tIDEN COLON FLOAT ENDL
   14             | VAR tIDEN COLON INT ENDL
   15             | VAR tIDEN COLON STRING ENDL

   16 simpleStmts: PRINT expOp ENDL
   17            | PRINT tSTRING_LITERAL ENDL
   18            | PRINT ENDL
   19            | READ tIDEN ENDL
   20            | assignOp ENDL

   21 ifwhilecombo: ifwhilecombo WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo simpleStmts
   26             | ifwhilecombo comment
   27             | comment
   28             | WHILE expOp DO ifwhilecombo DONE
   29             | IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   30             | IF expOp THEN ifwhilecombo ENDIF
   31             | simpleStmts

   32 expOp: expOp '-' expOp
   33      | expOp '+' expOp
   34      | expOp '*' expOp
   35      | expOp '/' expOp
   36      | '(' expOp ')'
   37      | '-' expOp
   38      | tINT
   39      | tFLOAT
   40      | tIDEN

   41 assignOp: /* empty */
   42         | tIDEN tASSIGN expOp
   43         | tIDEN tASSIGN tIDEN
   44         | tIDEN tASSIGN tSTRING_LITERAL
   45         | tIDEN

   46 comment: COMMENT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 36
')' (41) 36
'*' (42) 34
'+' (43) 33
'-' (45) 32 37
'/' (47) 35
error (256)
VAR (258) 8 9 10 13 14 15
WHILE (259) 21 22 28
DO (260) 21 22 28
DONE (261) 21 22 28
IF (262) 23 24 29 30
THEN (263) 23 24 29 30
ELSE (264) 23 29
ENDIF (265) 23 24 29 30
PRINT (266) 16 17 18
READ (267) 19
FLOAT (268) 8 13
STRING (269) 10 15
INT (270) 9 14
tIDEN (271) 8 9 10 13 14 15 19 40 42 43 44 45
tFLOAT (272) 39
tINT (273) 38
tSTRING_LITERAL (274) 17 21 44
NEG (275)
tASSIGN (276) 42 43 44
COMMENT (277) 46
ENDL (278) 8 9 10 13 14 15 16 17 18 19 20
COLON (279) 8 9 10 13 14 15


Nonterminals, with rules where they appear

$accept (31)
    on left: 0
input (32)
    on left: 1 2 3 4 5 6 7, on right: 0 1 2 3
declarations (33)
    on left: 8 9 10 11 12 13 14 15, on right: 1 4 5 8 9 10 11
simpleStmts (34)
    on left: 16 17 18 19 20, on right: 25 31
ifwhilecombo (35)
    on left: 21 22 23 24 25 26 27 28 29 30 31, on right: 1 2 4 6 21
    22 23 24 25 26 28 29 30
expOp (36)
    on left: 32 33 34 35 36 37 38 39 40, on right: 16 22 23 24 28 29
    30 32 33 34 35 36 37 42
assignOp (37)
    on left: 41 42 43 44 45, on right: 20
comment (38)
    on left: 46, on right: 3 7 11 12 26 27


state 0

    0 $accept: . input $end

    VAR      shift, and go to state 1
    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    input         go to state 8
    declarations  go to state 9
    simpleStmts   go to state 10
    ifwhilecombo  go to state 11
    assignOp      go to state 12
    comment       go to state 13


state 1

   13 declarations: VAR . tIDEN COLON FLOAT ENDL
   14             | VAR . tIDEN COLON INT ENDL
   15             | VAR . tIDEN COLON STRING ENDL

    tIDEN  shift, and go to state 14


state 2

   28 ifwhilecombo: WHILE . expOp DO ifwhilecombo DONE

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 20


state 3

   29 ifwhilecombo: IF . expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   30             | IF . expOp THEN ifwhilecombo ENDIF

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 21


state 4

   16 simpleStmts: PRINT . expOp ENDL
   17            | PRINT . tSTRING_LITERAL ENDL
   18            | PRINT . ENDL

    tIDEN            shift, and go to state 15
    tFLOAT           shift, and go to state 16
    tINT             shift, and go to state 17
    tSTRING_LITERAL  shift, and go to state 22
    '-'              shift, and go to state 18
    '('              shift, and go to state 19
    ENDL             shift, and go to state 23

    expOp  go to state 24


state 5

   19 simpleStmts: READ . tIDEN ENDL

    tIDEN  shift, and go to state 25


state 6

   42 assignOp: tIDEN . tASSIGN expOp
   43         | tIDEN . tASSIGN tIDEN
   44         | tIDEN . tASSIGN tSTRING_LITERAL
   45         | tIDEN .

    tASSIGN  shift, and go to state 26

    $default  reduce using rule 45 (assignOp)


state 7

   46 comment: COMMENT .

    $default  reduce using rule 46 (comment)


state 8

    0 $accept: input . $end
    1 input: input . declarations ifwhilecombo
    2      | input . ifwhilecombo
    3      | input . comment

    $end     shift, and go to state 27
    VAR      shift, and go to state 1
    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    declarations  go to state 28
    simpleStmts   go to state 10
    ifwhilecombo  go to state 29
    assignOp      go to state 12
    comment       go to state 30


state 9

    4 input: declarations . ifwhilecombo
    5      | declarations .
    8 declarations: declarations . VAR tIDEN COLON FLOAT ENDL
    9             | declarations . VAR tIDEN COLON INT ENDL
   10             | declarations . VAR tIDEN COLON STRING ENDL
   11             | declarations . comment

    VAR      shift, and go to state 31
    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    VAR       [reduce using rule 5 (input)]
    WHILE     [reduce using rule 5 (input)]
    IF        [reduce using rule 5 (input)]
    PRINT     [reduce using rule 5 (input)]
    READ      [reduce using rule 5 (input)]
    tIDEN     [reduce using rule 5 (input)]
    COMMENT   [reduce using rule 5 (input)]
    ENDL      reduce using rule 5 (input)
    ENDL      [reduce using rule 41 (assignOp)]
    $default  reduce using rule 5 (input)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 32
    assignOp      go to state 12
    comment       go to state 33


state 10

   31 ifwhilecombo: simpleStmts .

    $default  reduce using rule 31 (ifwhilecombo)


state 11

    6 input: ifwhilecombo .
   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment

    WHILE    shift, and go to state 34
    IF       shift, and go to state 35
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    WHILE     [reduce using rule 6 (input)]
    IF        [reduce using rule 6 (input)]
    PRINT     [reduce using rule 6 (input)]
    READ      [reduce using rule 6 (input)]
    tIDEN     [reduce using rule 6 (input)]
    COMMENT   [reduce using rule 6 (input)]
    ENDL      reduce using rule 6 (input)
    ENDL      [reduce using rule 41 (assignOp)]
    $default  reduce using rule 6 (input)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 12

   20 simpleStmts: assignOp . ENDL

    ENDL  shift, and go to state 38


state 13

    7 input: comment .
   12 declarations: comment .
   27 ifwhilecombo: comment .

    $end      reduce using rule 7 (input)
    $end      [reduce using rule 12 (declarations)]
    $end      [reduce using rule 27 (ifwhilecombo)]
    VAR       reduce using rule 7 (input)
    VAR       [reduce using rule 12 (declarations)]
    VAR       [reduce using rule 27 (ifwhilecombo)]
    WHILE     reduce using rule 7 (input)
    WHILE     [reduce using rule 12 (declarations)]
    WHILE     [reduce using rule 27 (ifwhilecombo)]
    IF        reduce using rule 7 (input)
    IF        [reduce using rule 12 (declarations)]
    IF        [reduce using rule 27 (ifwhilecombo)]
    PRINT     reduce using rule 7 (input)
    PRINT     [reduce using rule 12 (declarations)]
    PRINT     [reduce using rule 27 (ifwhilecombo)]
    READ      reduce using rule 7 (input)
    READ      [reduce using rule 12 (declarations)]
    READ      [reduce using rule 27 (ifwhilecombo)]
    tIDEN     reduce using rule 7 (input)
    tIDEN     [reduce using rule 12 (declarations)]
    tIDEN     [reduce using rule 27 (ifwhilecombo)]
    COMMENT   reduce using rule 7 (input)
    COMMENT   [reduce using rule 12 (declarations)]
    COMMENT   [reduce using rule 27 (ifwhilecombo)]
    ENDL      reduce using rule 7 (input)
    ENDL      [reduce using rule 12 (declarations)]
    ENDL      [reduce using rule 27 (ifwhilecombo)]
    $default  reduce using rule 7 (input)


state 14

   13 declarations: VAR tIDEN . COLON FLOAT ENDL
   14             | VAR tIDEN . COLON INT ENDL
   15             | VAR tIDEN . COLON STRING ENDL

    COLON  shift, and go to state 39


state 15

   40 expOp: tIDEN .

    $default  reduce using rule 40 (expOp)


state 16

   39 expOp: tFLOAT .

    $default  reduce using rule 39 (expOp)


state 17

   38 expOp: tINT .

    $default  reduce using rule 38 (expOp)


state 18

   37 expOp: '-' . expOp

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 40


state 19

   36 expOp: '(' . expOp ')'

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 41


state 20

   28 ifwhilecombo: WHILE expOp . DO ifwhilecombo DONE
   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp

    DO   shift, and go to state 42
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46


state 21

   29 ifwhilecombo: IF expOp . THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   30             | IF expOp . THEN ifwhilecombo ENDIF
   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp

    THEN  shift, and go to state 47
    '+'   shift, and go to state 43
    '-'   shift, and go to state 44
    '*'   shift, and go to state 45
    '/'   shift, and go to state 46


state 22

   17 simpleStmts: PRINT tSTRING_LITERAL . ENDL

    ENDL  shift, and go to state 48


state 23

   18 simpleStmts: PRINT ENDL .

    $default  reduce using rule 18 (simpleStmts)


state 24

   16 simpleStmts: PRINT expOp . ENDL
   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp

    '+'   shift, and go to state 43
    '-'   shift, and go to state 44
    '*'   shift, and go to state 45
    '/'   shift, and go to state 46
    ENDL  shift, and go to state 49


state 25

   19 simpleStmts: READ tIDEN . ENDL

    ENDL  shift, and go to state 50


state 26

   42 assignOp: tIDEN tASSIGN . expOp
   43         | tIDEN tASSIGN . tIDEN
   44         | tIDEN tASSIGN . tSTRING_LITERAL

    tIDEN            shift, and go to state 51
    tFLOAT           shift, and go to state 16
    tINT             shift, and go to state 17
    tSTRING_LITERAL  shift, and go to state 52
    '-'              shift, and go to state 18
    '('              shift, and go to state 19

    expOp  go to state 53


state 27

    0 $accept: input $end .

    $default  accept


state 28

    1 input: input declarations . ifwhilecombo
    8 declarations: declarations . VAR tIDEN COLON FLOAT ENDL
    9             | declarations . VAR tIDEN COLON INT ENDL
   10             | declarations . VAR tIDEN COLON STRING ENDL
   11             | declarations . comment

    VAR      shift, and go to state 31
    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 54
    assignOp      go to state 12
    comment       go to state 33


state 29

    2 input: input ifwhilecombo .
   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment

    WHILE    shift, and go to state 34
    IF       shift, and go to state 35
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    WHILE     [reduce using rule 2 (input)]
    IF        [reduce using rule 2 (input)]
    PRINT     [reduce using rule 2 (input)]
    READ      [reduce using rule 2 (input)]
    tIDEN     [reduce using rule 2 (input)]
    COMMENT   [reduce using rule 2 (input)]
    ENDL      reduce using rule 2 (input)
    ENDL      [reduce using rule 41 (assignOp)]
    $default  reduce using rule 2 (input)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 30

    3 input: input comment .
   12 declarations: comment .
   27 ifwhilecombo: comment .

    $end      reduce using rule 3 (input)
    $end      [reduce using rule 27 (ifwhilecombo)]
    VAR       reduce using rule 3 (input)
    VAR       [reduce using rule 12 (declarations)]
    VAR       [reduce using rule 27 (ifwhilecombo)]
    WHILE     reduce using rule 3 (input)
    WHILE     [reduce using rule 12 (declarations)]
    WHILE     [reduce using rule 27 (ifwhilecombo)]
    IF        reduce using rule 3 (input)
    IF        [reduce using rule 12 (declarations)]
    IF        [reduce using rule 27 (ifwhilecombo)]
    PRINT     reduce using rule 3 (input)
    PRINT     [reduce using rule 12 (declarations)]
    PRINT     [reduce using rule 27 (ifwhilecombo)]
    READ      reduce using rule 3 (input)
    READ      [reduce using rule 12 (declarations)]
    READ      [reduce using rule 27 (ifwhilecombo)]
    tIDEN     reduce using rule 3 (input)
    tIDEN     [reduce using rule 12 (declarations)]
    tIDEN     [reduce using rule 27 (ifwhilecombo)]
    COMMENT   reduce using rule 3 (input)
    COMMENT   [reduce using rule 12 (declarations)]
    COMMENT   [reduce using rule 27 (ifwhilecombo)]
    ENDL      reduce using rule 3 (input)
    ENDL      [reduce using rule 12 (declarations)]
    ENDL      [reduce using rule 27 (ifwhilecombo)]
    $default  reduce using rule 3 (input)


state 31

    8 declarations: declarations VAR . tIDEN COLON FLOAT ENDL
    9             | declarations VAR . tIDEN COLON INT ENDL
   10             | declarations VAR . tIDEN COLON STRING ENDL

    tIDEN  shift, and go to state 55


state 32

    4 input: declarations ifwhilecombo .
   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment

    WHILE    shift, and go to state 34
    IF       shift, and go to state 35
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    WHILE     [reduce using rule 4 (input)]
    IF        [reduce using rule 4 (input)]
    PRINT     [reduce using rule 4 (input)]
    READ      [reduce using rule 4 (input)]
    tIDEN     [reduce using rule 4 (input)]
    COMMENT   [reduce using rule 4 (input)]
    ENDL      reduce using rule 4 (input)
    ENDL      [reduce using rule 41 (assignOp)]
    $default  reduce using rule 4 (input)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 33

   11 declarations: declarations comment .
   27 ifwhilecombo: comment .

    $end      reduce using rule 11 (declarations)
    $end      [reduce using rule 27 (ifwhilecombo)]
    VAR       reduce using rule 11 (declarations)
    VAR       [reduce using rule 27 (ifwhilecombo)]
    WHILE     reduce using rule 11 (declarations)
    WHILE     [reduce using rule 27 (ifwhilecombo)]
    IF        reduce using rule 11 (declarations)
    IF        [reduce using rule 27 (ifwhilecombo)]
    PRINT     reduce using rule 11 (declarations)
    PRINT     [reduce using rule 27 (ifwhilecombo)]
    READ      reduce using rule 11 (declarations)
    READ      [reduce using rule 27 (ifwhilecombo)]
    tIDEN     reduce using rule 11 (declarations)
    tIDEN     [reduce using rule 27 (ifwhilecombo)]
    COMMENT   reduce using rule 11 (declarations)
    COMMENT   [reduce using rule 27 (ifwhilecombo)]
    ENDL      reduce using rule 11 (declarations)
    ENDL      [reduce using rule 27 (ifwhilecombo)]
    $default  reduce using rule 11 (declarations)


state 34

   21 ifwhilecombo: ifwhilecombo WHILE . tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo WHILE . expOp DO ifwhilecombo DONE

    tIDEN            shift, and go to state 15
    tFLOAT           shift, and go to state 16
    tINT             shift, and go to state 17
    tSTRING_LITERAL  shift, and go to state 56
    '-'              shift, and go to state 18
    '('              shift, and go to state 19

    expOp  go to state 57


state 35

   23 ifwhilecombo: ifwhilecombo IF . expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo IF . expOp THEN ifwhilecombo ENDIF

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 58


state 36

   25 ifwhilecombo: ifwhilecombo simpleStmts .

    $default  reduce using rule 25 (ifwhilecombo)


state 37

   26 ifwhilecombo: ifwhilecombo comment .

    $default  reduce using rule 26 (ifwhilecombo)


state 38

   20 simpleStmts: assignOp ENDL .

    $default  reduce using rule 20 (simpleStmts)


state 39

   13 declarations: VAR tIDEN COLON . FLOAT ENDL
   14             | VAR tIDEN COLON . INT ENDL
   15             | VAR tIDEN COLON . STRING ENDL

    FLOAT   shift, and go to state 59
    STRING  shift, and go to state 60
    INT     shift, and go to state 61


state 40

   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp
   37      | '-' expOp .

    $default  reduce using rule 37 (expOp)


state 41

   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp
   36      | '(' expOp . ')'

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46
    ')'  shift, and go to state 62


state 42

   28 ifwhilecombo: WHILE expOp DO . ifwhilecombo DONE

    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 63
    assignOp      go to state 12
    comment       go to state 64


state 43

   33 expOp: expOp '+' . expOp

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 65


state 44

   32 expOp: expOp '-' . expOp

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 66


state 45

   34 expOp: expOp '*' . expOp

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 67


state 46

   35 expOp: expOp '/' . expOp

    tIDEN   shift, and go to state 15
    tFLOAT  shift, and go to state 16
    tINT    shift, and go to state 17
    '-'     shift, and go to state 18
    '('     shift, and go to state 19

    expOp  go to state 68


state 47

   29 ifwhilecombo: IF expOp THEN . ifwhilecombo ELSE ifwhilecombo ENDIF
   30             | IF expOp THEN . ifwhilecombo ENDIF

    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 69
    assignOp      go to state 12
    comment       go to state 64


state 48

   17 simpleStmts: PRINT tSTRING_LITERAL ENDL .

    $default  reduce using rule 17 (simpleStmts)


state 49

   16 simpleStmts: PRINT expOp ENDL .

    $default  reduce using rule 16 (simpleStmts)


state 50

   19 simpleStmts: READ tIDEN ENDL .

    $default  reduce using rule 19 (simpleStmts)


state 51

   40 expOp: tIDEN .
   43 assignOp: tIDEN tASSIGN tIDEN .

    ENDL      reduce using rule 40 (expOp)
    ENDL      [reduce using rule 43 (assignOp)]
    $default  reduce using rule 40 (expOp)


state 52

   44 assignOp: tIDEN tASSIGN tSTRING_LITERAL .

    $default  reduce using rule 44 (assignOp)


state 53

   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp
   42 assignOp: tIDEN tASSIGN expOp .

    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 42 (assignOp)


state 54

    1 input: input declarations ifwhilecombo .
   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment

    WHILE    shift, and go to state 34
    IF       shift, and go to state 35
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    WHILE     [reduce using rule 1 (input)]
    IF        [reduce using rule 1 (input)]
    PRINT     [reduce using rule 1 (input)]
    READ      [reduce using rule 1 (input)]
    tIDEN     [reduce using rule 1 (input)]
    COMMENT   [reduce using rule 1 (input)]
    ENDL      reduce using rule 1 (input)
    ENDL      [reduce using rule 41 (assignOp)]
    $default  reduce using rule 1 (input)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 55

    8 declarations: declarations VAR tIDEN . COLON FLOAT ENDL
    9             | declarations VAR tIDEN . COLON INT ENDL
   10             | declarations VAR tIDEN . COLON STRING ENDL

    COLON  shift, and go to state 70


state 56

   21 ifwhilecombo: ifwhilecombo WHILE tSTRING_LITERAL . DO ifwhilecombo DONE

    DO  shift, and go to state 71


state 57

   22 ifwhilecombo: ifwhilecombo WHILE expOp . DO ifwhilecombo DONE
   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp

    DO   shift, and go to state 72
    '+'  shift, and go to state 43
    '-'  shift, and go to state 44
    '*'  shift, and go to state 45
    '/'  shift, and go to state 46


state 58

   23 ifwhilecombo: ifwhilecombo IF expOp . THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo IF expOp . THEN ifwhilecombo ENDIF
   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp

    THEN  shift, and go to state 73
    '+'   shift, and go to state 43
    '-'   shift, and go to state 44
    '*'   shift, and go to state 45
    '/'   shift, and go to state 46


state 59

   13 declarations: VAR tIDEN COLON FLOAT . ENDL

    ENDL  shift, and go to state 74


state 60

   15 declarations: VAR tIDEN COLON STRING . ENDL

    ENDL  shift, and go to state 75


state 61

   14 declarations: VAR tIDEN COLON INT . ENDL

    ENDL  shift, and go to state 76


state 62

   36 expOp: '(' expOp ')' .

    $default  reduce using rule 36 (expOp)


state 63

   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment
   28             | WHILE expOp DO ifwhilecombo . DONE

    WHILE    shift, and go to state 34
    DONE     shift, and go to state 77
    IF       shift, and go to state 35
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 64

   27 ifwhilecombo: comment .

    $default  reduce using rule 27 (ifwhilecombo)


state 65

   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   33      | expOp '+' expOp .
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 33 (expOp)


state 66

   32 expOp: expOp . '-' expOp
   32      | expOp '-' expOp .
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp

    '*'  shift, and go to state 45
    '/'  shift, and go to state 46

    $default  reduce using rule 32 (expOp)


state 67

   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   34      | expOp '*' expOp .
   35      | expOp . '/' expOp

    $default  reduce using rule 34 (expOp)


state 68

   32 expOp: expOp . '-' expOp
   33      | expOp . '+' expOp
   34      | expOp . '*' expOp
   35      | expOp . '/' expOp
   35      | expOp '/' expOp .

    $default  reduce using rule 35 (expOp)


state 69

   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment
   29             | IF expOp THEN ifwhilecombo . ELSE ifwhilecombo ENDIF
   30             | IF expOp THEN ifwhilecombo . ENDIF

    WHILE    shift, and go to state 34
    IF       shift, and go to state 35
    ELSE     shift, and go to state 78
    ENDIF    shift, and go to state 79
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 70

    8 declarations: declarations VAR tIDEN COLON . FLOAT ENDL
    9             | declarations VAR tIDEN COLON . INT ENDL
   10             | declarations VAR tIDEN COLON . STRING ENDL

    FLOAT   shift, and go to state 80
    STRING  shift, and go to state 81
    INT     shift, and go to state 82


state 71

   21 ifwhilecombo: ifwhilecombo WHILE tSTRING_LITERAL DO . ifwhilecombo DONE

    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 83
    assignOp      go to state 12
    comment       go to state 64


state 72

   22 ifwhilecombo: ifwhilecombo WHILE expOp DO . ifwhilecombo DONE

    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 84
    assignOp      go to state 12
    comment       go to state 64


state 73

   23 ifwhilecombo: ifwhilecombo IF expOp THEN . ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo IF expOp THEN . ifwhilecombo ENDIF

    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 85
    assignOp      go to state 12
    comment       go to state 64


state 74

   13 declarations: VAR tIDEN COLON FLOAT ENDL .

    $default  reduce using rule 13 (declarations)


state 75

   15 declarations: VAR tIDEN COLON STRING ENDL .

    $default  reduce using rule 15 (declarations)


state 76

   14 declarations: VAR tIDEN COLON INT ENDL .

    $default  reduce using rule 14 (declarations)


state 77

   28 ifwhilecombo: WHILE expOp DO ifwhilecombo DONE .

    $default  reduce using rule 28 (ifwhilecombo)


state 78

   29 ifwhilecombo: IF expOp THEN ifwhilecombo ELSE . ifwhilecombo ENDIF

    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 86
    assignOp      go to state 12
    comment       go to state 64


state 79

   30 ifwhilecombo: IF expOp THEN ifwhilecombo ENDIF .

    $default  reduce using rule 30 (ifwhilecombo)


state 80

    8 declarations: declarations VAR tIDEN COLON FLOAT . ENDL

    ENDL  shift, and go to state 87


state 81

   10 declarations: declarations VAR tIDEN COLON STRING . ENDL

    ENDL  shift, and go to state 88


state 82

    9 declarations: declarations VAR tIDEN COLON INT . ENDL

    ENDL  shift, and go to state 89


state 83

   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   21             | ifwhilecombo WHILE tSTRING_LITERAL DO ifwhilecombo . DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment

    WHILE    shift, and go to state 34
    DONE     shift, and go to state 90
    IF       shift, and go to state 35
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 84

   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   22             | ifwhilecombo WHILE expOp DO ifwhilecombo . DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment

    WHILE    shift, and go to state 34
    DONE     shift, and go to state 91
    IF       shift, and go to state 35
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 85

   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   23             | ifwhilecombo IF expOp THEN ifwhilecombo . ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   24             | ifwhilecombo IF expOp THEN ifwhilecombo . ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment

    WHILE    shift, and go to state 34
    IF       shift, and go to state 35
    ELSE     shift, and go to state 92
    ENDIF    shift, and go to state 93
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 86

   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment
   29             | IF expOp THEN ifwhilecombo ELSE ifwhilecombo . ENDIF

    WHILE    shift, and go to state 34
    IF       shift, and go to state 35
    ENDIF    shift, and go to state 94
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 87

    8 declarations: declarations VAR tIDEN COLON FLOAT ENDL .

    $default  reduce using rule 8 (declarations)


state 88

   10 declarations: declarations VAR tIDEN COLON STRING ENDL .

    $default  reduce using rule 10 (declarations)


state 89

    9 declarations: declarations VAR tIDEN COLON INT ENDL .

    $default  reduce using rule 9 (declarations)


state 90

   21 ifwhilecombo: ifwhilecombo WHILE tSTRING_LITERAL DO ifwhilecombo DONE .

    $default  reduce using rule 21 (ifwhilecombo)


state 91

   22 ifwhilecombo: ifwhilecombo WHILE expOp DO ifwhilecombo DONE .

    $default  reduce using rule 22 (ifwhilecombo)


state 92

   23 ifwhilecombo: ifwhilecombo IF expOp THEN ifwhilecombo ELSE . ifwhilecombo ENDIF

    WHILE    shift, and go to state 2
    IF       shift, and go to state 3
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts   go to state 10
    ifwhilecombo  go to state 95
    assignOp      go to state 12
    comment       go to state 64


state 93

   24 ifwhilecombo: ifwhilecombo IF expOp THEN ifwhilecombo ENDIF .

    $default  reduce using rule 24 (ifwhilecombo)


state 94

   29 ifwhilecombo: IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF .

    $default  reduce using rule 29 (ifwhilecombo)


state 95

   21 ifwhilecombo: ifwhilecombo . WHILE tSTRING_LITERAL DO ifwhilecombo DONE
   22             | ifwhilecombo . WHILE expOp DO ifwhilecombo DONE
   23             | ifwhilecombo . IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF
   23             | ifwhilecombo IF expOp THEN ifwhilecombo ELSE ifwhilecombo . ENDIF
   24             | ifwhilecombo . IF expOp THEN ifwhilecombo ENDIF
   25             | ifwhilecombo . simpleStmts
   26             | ifwhilecombo . comment

    WHILE    shift, and go to state 34
    IF       shift, and go to state 35
    ENDIF    shift, and go to state 96
    PRINT    shift, and go to state 4
    READ     shift, and go to state 5
    tIDEN    shift, and go to state 6
    COMMENT  shift, and go to state 7

    $default  reduce using rule 41 (assignOp)

    simpleStmts  go to state 36
    assignOp     go to state 12
    comment      go to state 37


state 96

   23 ifwhilecombo: ifwhilecombo IF expOp THEN ifwhilecombo ELSE ifwhilecombo ENDIF .

    $default  reduce using rule 23 (ifwhilecombo)
